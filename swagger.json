{
  "swagger": "2.0",
  "info": {
    "version": "2.0.0",
    "title": "Prediction API",
    "description": "API to handle data scraped from https://pancakeswap.finance/prediction prediction",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "host": "localhost:8181",
  "basePath": "/api",
  "tags": [
    {
      "name": "Oracles",
      "description": "Queries Oracles Data"
    },
    {
      "name": "Rounds",
      "description": "Queries Rounds Data"
    }
  ],
  "schemes": ["http"],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "paths": {
    "/oracle/all": {
      "get": {
        "tags": ["Oracles"],
        "summary": "Get all Oracles",
        "responses": {
          "200": {
            "description": "Array containing all Oracles, ever",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Oracle"
              }
            }
          }
        }
      }
    },
    "/oracle/current": {
      "get": {
        "tags": ["Oracles"],
        "summary": "Get current round Oracles",
        "responses": {
          "200": {
            "description": "Array containing all Oracles for specified round",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Oracle"
              }
            }
          }
        }
      }
    },
    "/oracle/timing": {
      "get": {
        "tags": ["Oracles"],
        "summary": "Get last Oracle data and current candle timing",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Timing"
            }
          }
        }
      }
    },
    "/oracle/limit/{limit}": {
      "get": {
        "tags": ["Oracles"],
        "summary": "Get the last {limit} Oracles",
        "parameters": [
          {
            "name": "limit",
            "in": "path",
            "description": "Number of oracles to fetch",
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Last {limit} Oracles",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Oracle"
              }
            }
          }
        }
      }
    },
    "/oracle/one/{roundId}": {
      "get": {
        "tags": ["Oracles"],
        "summary": "Get {roundId} Oracles",
        "parameters": [
          {
            "name": "roundId",
            "in": "path",
            "description": "ID of the round Oracles to fetch",
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Oracles for {roundId}",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Oracle"
              }
            }
          }
        }
      }
    },
    "/rounds/one/{roundId}": {
      "post": {
        "tags": ["Rounds"],
        "summary": "Get {roundId} Round",
        "parameters": [
          {
            "name": "roundId",
            "in": "path",
            "description": "ID of the round to fetch",
            "type": "integer",
            "format": "int64"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Data for round with ID {roundId}",
            "schema": {
              "$ref": "#/definitions/RoundNoHistory"
            }
          }
        }
      }
    },
    "/rounds/winstreak/average": {
      "post": {
        "tags": ["Rounds"],
        "summary": "Get the average winstreak, counting from the first round to the last",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Average winstreak length",
            "schema": {
              "$ref": "#/definitions/winstreakAvg"
            }
          }
        }
      }
    },
    "/rounds/winstreak": {
      "post": {
        "tags": ["Rounds"],
        "summary": "Get the last winstreak",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Last winstreak length",
            "schema": {
              "$ref": "#/definitions/winstreak"
            }
          }
        }
      }
    },
    "/rounds/simulate/{roundId}": {
      "post": {
        "tags": ["Rounds"],
        "summary": "[Experimental] Get data used to simulate a round for a betting bot for predictions",
        "parameters": [
          {
            "name": "roundId",
            "in": "path",
            "description": "ID of the round to fetch",
            "type": "integer",
            "format": "int64"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Arbitrary data to simulate a round",
            "schema": {
              "$ref": "#/definitions/RoundNoHistory"
            }
          }
        }
      }
    },
    "/rounds/period/hourly/{startTimestamp}/{endTimestamp}/{grouped}": {
      "post": {
        "tags": ["Rounds"],
        "summary": "Get Rounds in between timestamps, grouped by hour",
        "parameters": [
          {
            "name": "startTimestamp",
            "in": "path",
            "description": "Timestamp to start filtering from",
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "endTimestamp",
            "in": "path",
            "description": "Timestamp to stop filtering from",
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "grouped",
            "in": "path",
            "description": "False by default, true groups the data by hour",
            "type": "boolean"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Array of Rounds data",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RoundNoHistory"
              }
            }
          }
        }
      }
    },
    "/rounds/period/{period}": {
      "post": {
        "tags": ["Rounds"],
        "summary": "Get rounds within the given {period}",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "description": "Period to filter from",
            "type": "string",
            "enum": [
              "1H",
              "2H",
              "3H",
              "4H",
              "8H",
              "12H",
              "1D",
              "3D",
              "1W",
              "1M",
              "3M",
              "6M"
            ]
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Array of rounds data",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RoundNoHistory"
              }
            }
          }
        }
      }
    },
    "/rounds/{period}/history": {
      "post": {
        "tags": ["Rounds"],
        "summary": "Get rounds within the given period, including history",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "description": "Period to filter from",
            "type": "string",
            "enum": [
              "1H",
              "2H",
              "3H",
              "4H",
              "8H",
              "12H",
              "1D",
              "3D",
              "1W",
              "1M",
              "3M",
              "6M"
            ]
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Array of rounds data including history",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Round"
              }
            }
          }
        }
      }
    },
    "/rounds/timestamp/{startTimestamp}/{endTimestamp}": {
      "post": {
        "tags": ["Rounds"],
        "summary": "Get rounds between timestamps",
        "parameters": [
          {
            "name": "startTimestamp",
            "in": "path",
            "description": "Timestamp to start filtering from",
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "endTimestamp",
            "in": "path",
            "description": "Timestamp to stop filtering from",
            "type": "integer",
            "format": "int64"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Array of rounds",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RoundNoHistory"
              }
            }
          }
        }
      }
    }
  },

  "definitions": {
    "Oracle": {
      "required": [
        "_oracleId",
        "roundId",
        "oraclePrice",
        "openPrice",
        "BNBPrice",
        "BTCPrice",
        "secondsSinceCandleOpen",
        "timeLeft",
        "date"
      ],
      "properties": {
        "_id": {
          "type": "integer",
          "uniqueItems": true
        },
        "roundId": {
          "type": "string"
        },
        "oraclePrice": {
          "type": "number"
        },
        "openPrice": {
          "type": "number"
        },
        "BNBPrice": {
          "type": "number"
        },
        "BTCPrice": {
          "type": "number"
        },
        "secondsSinceCandleOpen": {
          "type": "number"
        },
        "timeLeft": {
          "type": "number"
        }
      }
    },
    "Timing": {
      "required": ["oracle", "candleTiming"],
      "properties": {
        "oracle": {
          "$ref": "#/definitions/Oracle"
        },
        "candleTiming": {
          "type": "number"
        }
      }
    },
    "Round": {
      "required": [
        "roundId",
        "roundId",
        "poolValue",
        "openPrice",
        "closePrice",
        "diff",
        "payoutUP",
        "payoutDOWN",
        "history",
        "date"
      ],
      "properties": {
        "_id": {
          "type": "integer",
          "uniqueItems": true
        },
        "roundId": {
          "type": "string",
          "uniqueItems": true
        },
        "poolValue": {
          "type": "number"
        },
        "openPrice": {
          "type": "number"
        },
        "closePrice": {
          "type": "number"
        },
        "diff": {
          "type": "number"
        },
        "payoutUP": {
          "type": "number"
        },
        "payoutDOWN": {
          "type": "number"
        },
        "history": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Oracle"
          }
        },
        "date": {
          "type": "number"
        }
      }
    },
    "RoundNoHistory": {
      "required": [
        "roundId",
        "roundId",
        "poolValue",
        "openPrice",
        "closePrice",
        "diff",
        "payoutUP",
        "payoutDOWN",
        "history",
        "date"
      ],
      "properties": {
        "_id": {
          "type": "integer",
          "uniqueItems": true
        },
        "roundId": {
          "type": "string",
          "uniqueItems": true
        },
        "poolValue": {
          "type": "number"
        },
        "openPrice": {
          "type": "number"
        },
        "closePrice": {
          "type": "number"
        },
        "diff": {
          "type": "number"
        },
        "payoutUP": {
          "type": "number"
        },
        "payoutDOWN": {
          "type": "number"
        },
        "date": {
          "type": "number"
        }
      }
    },
    "winstreak": {
      "required": ["winstreak"],
      "properties": {
        "winstreak": {
          "type": "number"
        }
      }
    },
    "winstreakAvg": {
      "required": [
        "avgWinstreakUP",
        "avgWinstreakDOWN",
        "medUP",
        "medDOWN",
        "winstreakUP",
        "winstreakDOWN"
      ],
      "properties": {
        "winstreak": {
          "type": "number"
        },
        "avgWinstreakUP": {
          "type": "number"
        },
        "avgWinstreakDOWN": {
          "type": "number"
        },
        "winstreakUP": {
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        "winstreakDOWN": {
          "type": "array",
          "items": {
            "type": "number"
          }
        }
      }
    }
  }
}
